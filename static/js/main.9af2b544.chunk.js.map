{"version":3,"sources":["components/Subtotal/Subtotal.js","components/PickupSavings/PickupSavings.js","components/TaxesFees/TaxesFees.js","components/EstimatedTotal/EstimatedTotal.js","components/ItemDetails/ItemDetails.js","actions/pomoCodeActions.js","actions/types.js","components/PromoCode/PromoCode.js","App.js","serviceWorker.js","reducers/promoCodeReducer.js","reducers/index.js","store.js","index.js"],"names":["SubTotal","Row","className","Col","md","this","props","price","Component","styles","PickupSavings","textDecoration","totalSavings","color","fontWeight","tooltip","Tooltip","id","OverlayTrigger","placement","overlay","style","TaxesFees","taxes","EstimatedTotal","ItemDetails","state","open","Button","variant","onClick","setState","Collapse","in","Media","width","height","alt","src","Body","handleChange","e","dispatch","type","payload","target","value","PromoCodeDiscount","Form","FormGroup","controlId","FormLabel","FormControl","placeholder","promocode","onChange","block","disable","isDisabled","giveDiscount","connect","promoCode","App","componentDidMount","total","estimatedTotal","giveDiscountHandler","disablePromoButton","Container","toFixed","PromoCode","Boolean","window","location","hostname","match","initialState","combineReducers","action","middleWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","devToolsExtension","f","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9af2b544.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nexport default class SubTotal extends Component {\r\n   render() {\r\n      return (\r\n         <Row className=\"show-grid\">\r\n            <Col md={6}>Subtotal</Col>\r\n            <Col md={6}>{`₹ ${this.props.price}`}</Col>\r\n         </Row>\r\n      )\r\n   }\r\n}","import React, { Component } from 'react';\r\n\r\nimport { Row, Col, Tooltip, OverlayTrigger } from 'react-bootstrap';\r\n\r\nvar styles = {\r\n   PickupSavings: {\r\n      textDecoration: 'underline'\r\n   },\r\n   totalSavings: {\r\n      color: 'red',\r\n      fontWeight: 800\r\n   }\r\n}\r\n\r\nexport default class PickupSavings extends Component {\r\n   render() {\r\n      const tooltip = (\r\n         <Tooltip id=\"tooltip\">\r\n            <p>Picking up your order in the store helps cut costs, and we pass the savings on to you.</p>\r\n         </Tooltip>\r\n      )\r\n\r\n      return (\r\n         <Row className=\"show-grid\">\r\n            <Col md={6}>\r\n               <OverlayTrigger placement=\"bottom\" overlay={tooltip}>\r\n                  <div style={styles.PickupSavings}>Savings</div>\r\n               </OverlayTrigger>\r\n            </Col>\r\n            <Col style={styles.totalSavings} md={6}>\r\n               {`₹ ${this.props.price}`}\r\n            </Col>\r\n         </Row>\r\n      );\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\nexport default class TaxesFees extends Component {\r\n   render() {\r\n      return (\r\n         <Row className=\"show-grid\">\r\n            <Col md={6}>Est. taxes & fees</Col>\r\n            <Col md={6}>{`₹ ${this.props.taxes}`}</Col>\r\n         </Row>\r\n      )\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nexport default class EstimatedTotal extends Component {\r\n   render() {\r\n      return (\r\n         <Row>\r\n            <Col md={6}><h2>Est. Total</h2></Col>\r\n            <Col md={6}><h2>{`₹ ${this.props.price}`}</h2></Col>\r\n         </Row>\r\n      )\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport { Button, Collapse, Media, Row, Col } from 'react-bootstrap';\r\n\r\nexport default class ItemDetails extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         open: false\r\n      };\r\n   }\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Button\r\n               variant=\"link\"\r\n               className=\"item-details-button\"\r\n\r\n               onClick={() => this.setState({ open: !this.state.open })}\r\n            >\r\n               {this.state.open === false ? `See` : 'Hide '} item details\r\n               {this.state.open === false ? ` +` : ' -'}\r\n            </Button>\r\n            <Collapse in={this.state.open}>\r\n               <div>\r\n\r\n                  <Media>\r\n                     <img\r\n                        className=\"align-self-center mr-3\"\r\n                        width={100}\r\n                        height={100}\r\n                        alt=\"thumbnail\"\r\n                        src=\"https://d3o372dlsg9lxo.cloudfront.net/catalog/products/d8228/images/grid/5cf04859642ab606a88ee7cd/Dexter_Leather_Chair_Lounge_Arm_LeatherSaddle_DexterWalnutWood_D8228.jpg\"\r\n\r\n                     />\r\n                     <Media.Body>\r\n                        <p>DEXTER LEATHER LOUNGE CHAIR</p>\r\n                        <Row className=\"show-grid\">\r\n                           <Col md={6}>\r\n                              <strong>{`₹ ${this.props.price}`}</strong>\r\n                              <br />\r\n                              <strong className=\"price-strike\">{`₹ ${this.props.price}`}</strong>\r\n                           </Col>\r\n                           <Col md={6}>Qty: 1</Col>\r\n                        </Row>\r\n                     </Media.Body>\r\n\r\n                  </Media>\r\n\r\n\r\n               </div>\r\n            </Collapse>\r\n         </div>\r\n      )\r\n   }\r\n}","import { PROMO_CODE } from './types';\r\n\r\nexport const handleChange = e => dispatch => {\r\n   dispatch({\r\n      type: PROMO_CODE,\r\n      payload: e.target.value\r\n   });\r\n};","export const PROMO_CODE = 'PROMO_CODE';\r\n","import React, { Component } from 'react';\r\nimport {\r\n   Button,\r\n   Collapse,\r\n   Form,\r\n   Row,\r\n   Col,\r\n   FormGroup,\r\n   FormLabel,\r\n   FormControl\r\n} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { handleChange } from '../../actions/pomoCodeActions';\r\n\r\nclass PromoCodeDiscount extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n         open: false\r\n\r\n      };\r\n   }\r\n\r\n   handleChange = e => {\r\n      this.props.handleChange(e);\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Button\r\n\r\n               className=\"promo-code-button\"\r\n               variant=\"link\"\r\n               onClick={() => this.setState({ open: !this.state.open })}\r\n            >\r\n               {this.state.open === false ? `Apply ` : `Hide `}\r\n               promo code\r\n               {this.state.open === false ? `  +` : ` -`}\r\n            </Button>\r\n            <Collapse in={this.state.open}>\r\n               <div>\r\n                  <Row className=\"show-grid\">\r\n                     <Col md={12}>\r\n                        <Form>\r\n                           <FormGroup controlId=\"formInlineName\">\r\n                              <FormLabel>Promo Code</FormLabel>\r\n                              <FormControl\r\n                                 type=\"text\"\r\n                                 placeholder=\"Enter promo code\"\r\n                                 value={this.props.promocode}\r\n                                 onChange={this.handleChange}\r\n                              />\r\n                           </FormGroup>\r\n                           <Button\r\n                              block\r\n                              variant=\"success\"\r\n                              className=\"btn-round\"\r\n                              disable={this.props.isDisabled}\r\n                              onClick={this.props.giveDiscount}\r\n                           >\r\n                              Apply\r\n                           </Button>\r\n                        </Form>\r\n                     </Col>\r\n                  </Row>\r\n               </div>\r\n            </Collapse>\r\n         </div >\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   promoCode: state.promoCode.value\r\n});\r\n\r\nexport default connect(mapStateToProps, { handleChange })(PromoCodeDiscount);","// https://github.com/paulhanna1933/react-purchase-summary\n\n\nimport React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\n\nimport SubTotal from './components/Subtotal/Subtotal';\nimport PickupSavings from './components/PickupSavings/PickupSavings';\nimport TaxesFees from './components/TaxesFees/TaxesFees';\nimport EstimatedTotal from './components/EstimatedTotal/EstimatedTotal';\nimport ItemDetails from './components/ItemDetails/ItemDetails';\nimport PromoCodeDiscount from './components/PromoCode/PromoCode';\n\n\n\nimport { connect } from 'react-redux';\nimport { handleChange } from './actions/pomoCodeActions';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      total: 100,\n      PickupSavings: -3.85,\n      taxes: 0,\n      estimatedTotal: 0,\n      disablePromoButton: false\n    }\n  }\n\n  componentDidMount = () => {\n    this.setState({\n      taxes: (this.state.total + this.state.PickupSavings) * 0.185\n\n    },\n      function () {\n        this.setState({\n          estimatedTotal: this.state.total + this.state.PickupSavings + this.state.taxes\n        })\n      })\n  };\n\n  giveDiscountHandler = () => {\n    if (this.props.promoCode === 'DISCOUNT') {\n      this.setState({\n        estimatedTotal: this.state.estimatedTotal * 0.9\n      },\n        function () {\n          this.setState({\n            disablePromoButton: true\n          })\n        }\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Container className=\"purchase-card\">\n          <SubTotal price={this.state.total.toFixed(2)} />\n          <PickupSavings price={this.state.PickupSavings} />\n          <TaxesFees taxes={this.state.taxes.toFixed(2)} />\n          <hr />\n          <EstimatedTotal price={this.state.estimatedTotal.toFixed(2)} />\n          <ItemDetails price={this.state.estimatedTotal.toFixed(2)} />\n          <hr />\n          <PromoCodeDiscount\n            giveDiscount={() => this.giveDiscountHandler()}\n            isDisabled={this.state.disablePromoButton}\n          />\n\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  promoCode: state.promoCode.value\n})\n\nexport default connect(mapStateToProps, { handleChange })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { PROMO_CODE } from '../actions/types';\r\n\r\nconst initialState = {\r\n   open: false,\r\n   value: ''\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   switch (action.type) {\r\n      case PROMO_CODE:\r\n         return {\r\n            ...state,\r\n            value: action.payload\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}","import { combineReducers } from 'redux';\r\nimport promoCodeReducer from './promoCodeReducer';\r\n\r\nexport default combineReducers({\r\n   promoCode: promoCodeReducer\r\n});\r\n","// Import createStore and apply Middleware\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleWare = [thunk];\r\nconst store = createStore(\r\n   rootReducer,\r\n   initialState,\r\n   compose(\r\n      applyMiddleware(...middleWare),\r\n      window.devToolsExtension ? window.devToolsExtension() : f => f\r\n   )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}